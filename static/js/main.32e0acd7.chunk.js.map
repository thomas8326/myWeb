{"version":3,"sources":["constants/api.enum.ts","models/user-info.ts","reducers/login.reducer.tsx","containers/login/login.tsx","containers/calendar/pagination.tsx","containers/calendar/hint.tsx","containers/calendar/calendar-header.tsx","containers/calendar/day-viewer.tsx","models/myDate.ts","constants/constants.ts","utils/date.util.tsx","containers/calendar/calendar-board.tsx","components/detail-header.tsx","containers/message/coversation-bubble.tsx","containers/message/conversation.tsx","reducers/conversation.reducer.tsx","middlewares/message-socket.middleware.tsx","utils/useKeyEnter.tsx","containers/message/sender.tsx","models/room.ts","containers/message/conversation-room.tsx","reducers/room.reducer.tsx","containers/message/create-user-button.tsx","containers/message/room.tsx","containers/message/room-list.tsx","containers/message/message.tsx","components/global-header.tsx","hoc/infinite-scroll.tsx","reducers/github-repo.reducer.tsx","containers/github-repo/github-repo-list.tsx","containers/github-repo/github-repos.tsx","containers/showroom/showroom.tsx","App.tsx","reducers/index.tsx","index.tsx"],"names":["ApiPath","UserInfo","name","id","this","LOGIN_USER","initState","loginReducer","state","action","type","object","Login","useState","userName","setUserName","password","setUserPassword","dispatch","useDispatch","history","useHistory","onLogin","userInfo","axios","post","then","response","user","data","payload","push","className","placeholder","value","onInput","event","currentTarget","onClick","PaginationContainer","styled","div","PaginationButton","props","disabled","css","Pagination","weekRange","disabledPrev","goLast","goNext","Hint","CalendarHeader","week","today","goNextWeek","goLastWeek","key","length","firstDayOfWeek","year","stringMonth","stringDate","lastDayOfWeek","getCurrentWeekRange","OneDayColumn","CalendarTime","DayViewer","date","dayOfWeek","minuteOfDay","map","hour","text","MyDate","month","day","generateStringMonth","correctMonth","getMonth","toString","generateStringDate","getDate","generateMinuteOfDay","startClock","startMinute","start","clock","minute","dayTimeConverter","clockString","minuteString","result","newCurrent","newDate","Date","getFullYear","getDay","generateKey","parseInt","getWeek","newMyDate","myDate","dayOfWeekMap","Map","Array","fill","_","index","setDate","tempDate","Object","assign","get","getDateDiff","currentDate","thatDate","yearDiff","monthDiff","dayDiff","CalendarContainer","Calendar","setWeek","isModalVisible","setIsModalVisible","CalendarOutlined","style","fontSize","visible","onOk","onCancel","startDateOfWeek","endDateOfWeek","DetailHeader","onBackClick","title","LeftOutlined","ConversationBubble","isMine","message","classNames","content","Conversation","roomId","useSelector","messages","conversation","senderId","RECEIVE_MESSAGE","conversationReducer","newConversation","keys","forEach","concat","SEND_MESSAGE","STOMP_CONNECT_ROOM","STOMP_DISCONNECT_ROOM","websocketMiddleware","store","stomp","next","Stomp","over","WebSocket","connect","subscribe","receiveMessage","JSON","parse","body","isNil","disconnect","unsubscribe","msgId","send","stringify","useEnterKey","enterFunction","e","Sender","setText","uuidv4","sendMessage","enterKey","onKeyUp","SearchOutlined","Room","participants","ConversationRoom","roomInfo","rooms","find","room","myUserInfo","useEffect","disconnectStomp","CREATE_CHAT_ROOM","GET_CHAT_ROOMS","ADD_ROOM_USER","SET_ROOM_MESSAGE","roomReducer","CreateNewUserButton","isCreateUser","setIsCreateUser","roomName","setRoomName","onCreateRoom","createChatRoom","RobotFilled","CheckCircleFilled","CloseCircleFilled","PlusCircleFilled","ChatRoom","CommentOutlined","ChatRoomList","setRooms","getChatRooms","onClickRoom","patch","newParticipants","newRoom","addParticipant","role","tabIndex","onKeyDown","Message","userId","setRoomId","setVisible","wsConnect","aria-label","width","placement","onClose","closable","maskStyle","backgroundColor","destroyOnClose","HeaderButtonGroup","GlobalHeader","InfiniteContainer","Sensor","span","FETCH_LIST","SEARCH_NEW_GIT_REPO","githubRepoReducer","Repo","li","RepoStar","RepoUpdateTime","GithubRepoList","propsData","isLoadCompleted","isFetchingData","searchName","page","repos","githubRepos","getGitRepo","params","per_page","q","headers","Authorization","list","status","items","repo","language","starCount","url","html_url","window","open","full_name","StarFilled","stargazers_count","toFixed","description","license","updated_at","GithubRepos","WrappedComponent","callback","setPage","setSearchName","RepoList","isLoaded","prePage","sensor","document","querySelector","IntersectionObserver","entry","isIntersecting","root","rootMargin","threshold","observe","setState","React","PureComponent","defaultValue","Showroom","App","exact","path","storage","combineReducers","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.32e0acd7.chunk.js","sourcesContent":["enum ApiPath {\r\n  Room = '/api/rooms',\r\n  Login = '/api/login',\r\n}\r\n\r\nexport default ApiPath;\r\n","class UserInfo {\r\n  id!: string;\r\n\r\n  name!: string;\r\n\r\n  constructor(name: string) {\r\n    this.name = name ?? null;\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import ReduxAction from 'src/models/action';\r\nimport UserInfo from 'src/models/user-info';\r\n\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\n\r\nconst initState: UserInfo = {\r\n  id: '',\r\n  name: '',\r\n};\r\n\r\nexport function login(user: UserInfo): ReduxAction<UserInfo> {\r\n  return {\r\n    type: LOGIN_USER,\r\n    payload: [],\r\n    object: user,\r\n  };\r\n}\r\n\r\nconst loginReducer = (state = initState, action: ReduxAction<UserInfo>): UserInfo => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        ...action.object,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","// imt Action from '@Model/action';\r\n// import UserInfo from '@Model/user-info';\r\n// import { LOGIN_USER } from '@Reducer/login.reducer';\r\nimport axios from 'axios';\r\nimport React, { FormEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ApiPath from 'src/constants/api.enum';\r\nimport ResponseContent from 'src/models/response-content';\r\nimport UserInfo from 'src/models/user-info';\r\nimport { login } from 'src/reducers/login.reducer';\r\n\r\nfunction Login() {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setUserPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onLogin = () => {\r\n    const userInfo = new UserInfo(userName);\r\n\r\n    axios.post<ResponseContent<UserInfo>>(ApiPath.Login, userInfo).then((response) => {\r\n      dispatch(login(response.data.data));\r\n    });\r\n\r\n    history.push('/show-room');\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-layout flex-col flex-center\">\r\n      <div className=\"flex-col flex-center login\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-box input-l\"\r\n          placeholder=\"Username\"\r\n          value={userName}\r\n          onInput={(event: FormEvent<HTMLInputElement>) => setUserName(event.currentTarget.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-box input-l\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onInput={(event: FormEvent<HTMLInputElement>) => setUserPassword(event.currentTarget.value)}\r\n        />\r\n        <input type=\"submit\" className=\"input-s\" value=\"submit\" onClick={() => onLogin()} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// import classNames from 'classnames';\nimport React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PaginationButton = styled.div`\n  box-sizing: border-box;\n  padding: 7px 18px;\n  border: 1px solid #dcdfe6;\n  border-radius: 3px;\n  cursor: pointer;\n\n  ${(props: { disabled?: boolean }) =>\n    props.disabled &&\n    css`\n      color: #c0c4cc;\n      background-color: #fff;\n      background-image: none;\n      border-color: #ebeef5;\n      cursor: not-allowed;\n      pointer-events: none;\n    `}\n`;\n\nexport default function Pagination(props: {\n  goLast: () => void;\n  goNext: () => void;\n  disabledPrev: boolean;\n  weekRange: string;\n}) {\n  // const { goLast, goNext, weekRange, lastWeekButtonClass } = props;\n  const { weekRange, disabledPrev, goLast, goNext } = props;\n\n  return (\n    <PaginationContainer>\n      <PaginationButton disabled={disabledPrev} onClick={() => goLast()}>\n        {'<'}\n      </PaginationButton>\n      <PaginationButton onClick={() => goNext()}>{'>'}</PaginationButton>\n      <div className=\"L-margin-m\">{weekRange}</div>\n    </PaginationContainer>\n  );\n}\n","import React from 'react';\n\n// TODO: Timezone and area\nexport default function Hint() {\n  return (\n    <div className=\"hint fontSize-s\">\n      <div className=\"hintText\">{/* *<FormattedMessage id='timeZoneHint' />: */}</div>\n      <div className=\"timezone\">{/* <FormattedMessage id='taipei' /> (GMT+08:00) */}</div>\n    </div>\n  );\n}\n","import React from 'react';\n// import { useDispatch } from 'react-redux';\n// import { goNextWeek, goLastWeek, getWeek, getToday } from '../redux/modules/calendar';\n\n// import '../style/pages/calendarHeader.scss';\nimport Pagination from 'src/containers/calendar/pagination';\n// import { goLastWeek, goNextWeek } from 'src/reducers/calendar';\nimport Hint from 'src/containers/calendar/hint';\nimport MyDate from 'src/models/myDate';\n\nexport default function CalendarHeader(props: {\n  week: MyDate[];\n  today: MyDate;\n  goNextWeek: () => void;\n  goLastWeek: () => void;\n}) {\n  const { week, today, goNextWeek, goLastWeek } = props;\n\n  const getCurrentWeekRange = () => {\n    if (week.length) {\n      const firstDayOfWeek = `${week[0].year}/${week[0].stringMonth}/${week[0].stringDate}`;\n      const lastDayOfWeek = week[week.length - 1].stringDate;\n      return `${firstDayOfWeek} - ${lastDayOfWeek}`;\n    }\n    return 'Oops, that seems occur an error.';\n  };\n\n  return (\n    <div className=\"calendarHeader\">\n      <Pagination\n        disabledPrev={week[0].key < today.key}\n        goLast={goLastWeek}\n        goNext={goNextWeek}\n        weekRange={getCurrentWeekRange()}\n      />\n      <Hint />\n    </div>\n  );\n}\n","import React from 'react';\nimport MyDate from 'src/models/myDate';\nimport styled, { css } from 'styled-components';\n\nconst OneDayColumn = styled.div`\n  display: flex;\n  flex: 1 1;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 5px;\n  border-top: 4px solid var(--primary-color);\n  ${(props: { disabled: boolean }) =>\n    props.disabled &&\n    css`\n      border-color: var(--primary-disable-color);\n    `}\n`;\n\nconst CalendarTime = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 4px 0;\n`;\n\nexport default function DayViewer(props: { date: MyDate; today: MyDate }) {\n  const { date, today } = props;\n\n  return (\n    <OneDayColumn disabled={date.key < today.key}>\n      <div className=\"dayOfWeek textCenter fontSize-l\">{date.dayOfWeek}</div>\n      <div className=\"date textCenter fontSize-l\">{date.date}</div>\n      <ul className=\"reset-ul\">\n        {date.minuteOfDay.map((hour) => (\n          <CalendarTime key={hour.value}>{hour.text}</CalendarTime>\n        ))}\n      </ul>\n    </OneDayColumn>\n  );\n}\n","import { HALF_OF_HOUR, ONE_DAY_CLOCK, ONE_HOUR } from 'src/constants/constants';\r\n\r\nexport default class MyDate {\r\n  key!: number;\r\n\r\n  year!: number;\r\n\r\n  month!: number;\r\n\r\n  date!: number;\r\n\r\n  day!: number;\r\n\r\n  stringMonth!: string;\r\n\r\n  stringDate!: string;\r\n\r\n  dayOfWeek!: string;\r\n\r\n  minuteOfDay: { text: string; value: number }[] = [];\r\n\r\n  constructor(date?: Date) {\r\n    const newDate = date ?? new Date();\r\n    this.year = newDate.getFullYear();\r\n    this.month = newDate.getMonth() + 1;\r\n    this.date = newDate.getDate();\r\n    this.day = newDate.getDay();\r\n    this.stringMonth = this.generateStringMonth(newDate);\r\n    this.stringDate = this.generateStringDate(newDate);\r\n    this.key = this.generateKey(newDate);\r\n    this.minuteOfDay = this.generateMinuteOfDay(0, 0);\r\n    this.dayOfWeek = '';\r\n  }\r\n\r\n  private generateStringMonth = (date: Date) => {\r\n    const correctMonth = date.getMonth() + 1;\r\n    return correctMonth < 10 ? `0${correctMonth}` : correctMonth.toString();\r\n  };\r\n\r\n  private generateStringDate = (date: Date): string =>\r\n    date.getDate() < 10 ? `0${date.getDate()}` : date.getDate().toString();\r\n\r\n  private generateKey(date: Date) {\r\n    return parseInt(`${date.getFullYear()}${this.stringMonth}${this.stringDate}`, 10);\r\n  }\r\n\r\n  private generateMinuteOfDay = (startClock: number, startMinute: number): { text: string; value: number }[] => {\r\n    let start = { clock: startClock, minute: startMinute };\r\n\r\n    const dayTimeConverter = (clock: number, minute: number) => {\r\n      const clockString = clock < 10 ? `0${clock}` : clock;\r\n      const minuteString = minute < 10 ? `0${minute}` : minute;\r\n      return `${clockString}:${minuteString}`;\r\n    };\r\n\r\n    const result = [{ text: dayTimeConverter(startClock, startMinute), value: startClock * 100 + startMinute }];\r\n\r\n    while (start.clock < ONE_DAY_CLOCK) {\r\n      const newCurrent =\r\n        start.minute + HALF_OF_HOUR >= ONE_HOUR\r\n          ? { clock: start.clock + 1, minute: 0 }\r\n          : { clock: start.clock, minute: start.minute + HALF_OF_HOUR };\r\n\r\n      if (newCurrent.clock !== ONE_DAY_CLOCK) {\r\n        result.push({\r\n          text: dayTimeConverter(newCurrent.clock, newCurrent.minute),\r\n          value: newCurrent.clock * 100 + newCurrent.minute,\r\n        });\r\n      }\r\n\r\n      start = newCurrent;\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n","/* eslint-disable import/prefer-default-export */\nexport const ONE_DAY_CLOCK = 24;\nexport const HALF_OF_HOUR = 30;\nexport const ONE_HOUR = 60;\nexport const GIT_ACCESS_TOKEN = '37302555674d2c8bd34bc5a0fc52b33087339dd2';\n","import MyDate from 'src/models/myDate';\n\nexport function getWeek(newMyDate?: MyDate): MyDate[] {\n  const myDate = newMyDate || new MyDate();\n  const firstDayOfWeek = myDate.date - myDate.day;\n  const lastDayOfWeek = firstDayOfWeek + 6;\n  const dayOfWeekMap = new Map([\n    [0, 'sun'],\n    [1, 'mon'],\n    [2, 'tue'],\n    [3, 'wed'],\n    [4, 'thu'],\n    [5, 'fri'],\n    [6, 'sat'],\n  ]);\n\n  const week = new Array(lastDayOfWeek - firstDayOfWeek + 1).fill(-1).map((_, index) => {\n    const date = new Date(myDate.year, myDate.month - 1, myDate.date);\n    date.setDate(firstDayOfWeek + index);\n    const tempDate = new MyDate(date);\n\n    return Object.assign(new MyDate(), tempDate, { dayOfWeek: dayOfWeekMap.get(index) });\n  });\n\n  return week;\n}\n\nexport function getDateDiff(date: string) {\n  const currentDate = new Date();\n  const thatDate = new Date(date);\n  const yearDiff = currentDate.getFullYear() - thatDate.getFullYear();\n  const monthDiff = currentDate.getMonth() - thatDate.getMonth();\n  const dayDiff = currentDate.getDate() - thatDate.getDate();\n\n  if (yearDiff) {\n    return `Updated ${yearDiff.toString()} ${yearDiff === 1 ? 'year' : 'years'} ago`;\n  }\n  if (monthDiff) {\n    return `Updated ${monthDiff.toString()} ${monthDiff === 1 ? 'month' : 'months'} ago`;\n  }\n\n  if (dayDiff) {\n    return `Updated ${dayDiff.toString()} ${dayDiff === 1 ? 'day' : 'days'} ago`;\n  }\n\n  return '';\n}\n","import { CalendarOutlined } from '@ant-design/icons';\nimport { Modal } from 'antd';\nimport React, { useState } from 'react';\nimport CalendarHeader from 'src/containers/calendar/calendar-header';\n// import { useDispatch } from 'react-redux';\nimport DayViewer from 'src/containers/calendar/day-viewer';\nimport MyDate from 'src/models/myDate';\nimport { getWeek } from 'src/utils/date.util';\nimport styled from 'styled-components';\n\nconst CalendarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  max-height: 50vh;\n  padding: 15px 0;\n  overflow: auto;\n`;\n\nexport default function Calendar() {\n  const [week, setWeek] = useState<MyDate[]>(getWeek(new MyDate()));\n  const [today] = useState<MyDate>(new MyDate());\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const goLastWeek = () => {\n    const startDateOfWeek = week[0];\n    const date = new Date(startDateOfWeek.year, startDateOfWeek.month - 1, startDateOfWeek.date - 7);\n\n    setWeek(getWeek(new MyDate(date)));\n  };\n\n  const goNextWeek = () => {\n    const endDateOfWeek = week[week.length - 1];\n    const date = new Date(endDateOfWeek.year, endDateOfWeek.month - 1, endDateOfWeek.date + 1);\n\n    setWeek(getWeek(new MyDate(date)));\n  };\n\n  return (\n    <>\n      <CalendarOutlined onClick={() => setIsModalVisible(true)} style={{ fontSize: '24px' }} />\n      <Modal visible={isModalVisible} onOk={() => setIsModalVisible(false)} onCancel={() => setIsModalVisible(false)}>\n        <CalendarHeader week={week} today={today} goLastWeek={goLastWeek} goNextWeek={goNextWeek} />\n        <CalendarContainer>\n          {week.map((date: MyDate) => (\n            <DayViewer key={date.key} date={date} today={today} />\n          ))}\n        </CalendarContainer>\n      </Modal>\n    </>\n  );\n}\n","import { LeftOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\n\r\nfunction DetailHeader(props: { onBackClick: () => void; title: string }) {\r\n  const { onBackClick, title } = props;\r\n  return (\r\n    <div className=\"flex-row flex-align-center padding-m\">\r\n      <LeftOutlined onClick={() => onBackClick()} />\r\n      <span className=\"margin-center title-3\">{title}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetailHeader;\r\n","import Message from 'src/models/message';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nfunction ConversationBubble(props: { message: Message; isMine: boolean }) {\r\n  const { isMine, message } = props;\r\n  return (\r\n    <div className={classNames('bubble', { 'mine-bubble': isMine, 'other-bubble': !isMine })}>\r\n      <div className=\"flex-row flex-align-center\">\r\n        <div className=\"message-text\">{message.content}</div>\r\n        <div className=\"message-time\">{message.date}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConversationBubble;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport ConversationBubble from 'src/containers/message/coversation-bubble';\r\nimport ReduxStorage from 'src/models/storage';\r\n\r\nfunction Conversation(props: { roomId: string }) {\r\n  const { roomId } = props;\r\n  const userInfo = useSelector((state: ReduxStorage) => state.userInfo);\r\n  const messages = useSelector((state: ReduxStorage) => state.conversation[roomId]);\r\n\r\n  return (\r\n    <div className=\"conversation flex-1 flex-col\">\r\n      <div className=\"full-layout\">\r\n        {messages?.map((message) => (\r\n          <ConversationBubble isMine={userInfo.id === message.senderId} message={message} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Conversation;\r\n","import ReduxAction from 'src/models/action';\nimport Conversation from 'src/models/conversation';\nimport Message from 'src/models/message';\n\nconst initState: Conversation = new Conversation();\n\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\n\nexport function receiveMessage(message: Message): ReduxAction<Conversation> {\n  const newConversation: Conversation = { [message.roomId]: [message] };\n\n  return {\n    type: RECEIVE_MESSAGE,\n    payload: [],\n    object: newConversation,\n  };\n}\n\nconst conversationReducer = (state = initState, action: ReduxAction<Conversation>): Conversation => {\n  switch (action.type) {\n    case RECEIVE_MESSAGE: {\n      const newConversation = state;\n      Object.keys(action?.object ?? []).forEach((key) => {\n        newConversation[key] = (newConversation[key] ?? []).concat(action.object ? action.object[key] : []);\n      });\n\n      return newConversation;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default conversationReducer;\n","import { Middleware } from 'redux';\r\nimport ReduxAction from 'src/models/action';\r\nimport Message from 'src/models/message';\r\nimport ReduxStorage from 'src/models/storage';\r\n// import { receiveMessage } from 'src/reducers/message.reducer';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CompatClient, Stomp } from '@stomp/stompjs';\r\nimport { isNil } from 'ramda';\r\nimport UserInfo from 'src/models/user-info';\r\nimport { receiveMessage } from 'src/reducers/conversation.reducer';\r\n\r\nexport const WS_CONNECT = 'WS_CONNECT';\r\nexport const WS_DISCONNECT = 'WS_DISCONNECT';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const STOMP_CONNECT_ROOM = 'STOMP_CONNECT_ROOM';\r\nexport const STOMP_DISCONNECT_ROOM = 'STOMP_DISCONNECT_ROOM';\r\n\r\nexport const BROADCAST_MESSAGE = '/all/users';\r\nexport const PRIVATE_MESSAGE = '/chat/room';\r\n\r\nexport const wsConnect = (userId: string): ReduxAction<UserInfo> => ({\r\n  type: 'WS_CONNECT',\r\n  object: { id: userId, name: '' },\r\n  payload: [],\r\n});\r\nexport const wsDisconnect = () => ({ type: 'WS_DISCONNECT' });\r\n\r\nexport function sendMessage(roomId: string, text: string, senderId: string): ReduxAction<Message> {\r\n  return {\r\n    type: SEND_MESSAGE,\r\n    payload: [],\r\n    object: { msgId: uuidv4(), roomId, content: text, senderId },\r\n  };\r\n}\r\n\r\nexport function connectStomp(roomId: string): ReduxAction<Message> {\r\n  return {\r\n    type: STOMP_CONNECT_ROOM,\r\n    payload: [],\r\n    object: { roomId },\r\n  };\r\n}\r\n\r\nexport function disconnectStomp(roomId: string): ReduxAction<Message> {\r\n  return {\r\n    type: STOMP_DISCONNECT_ROOM,\r\n    payload: [],\r\n    object: { roomId },\r\n  };\r\n}\r\n\r\nconst websocketMiddleware: Middleware<{}, ReduxStorage> = (store) => {\r\n  let stomp!: CompatClient;\r\n\r\n  return (next) => (action) => {\r\n    switch (action.type) {\r\n      case WS_CONNECT: {\r\n        stomp = Stomp.over(() => new WebSocket('ws://localhost:8080/chat'));\r\n        stomp.connect(action.object, () => {\r\n          // stomp.subscribe('/all', (message) => store.dispatch(receiveMessage(JSON.parse(message.body))));\r\n          stomp.subscribe('/user/queue/subscribe', (message) =>\r\n            store.dispatch(receiveMessage(JSON.parse(message.body))),\r\n          );\r\n        });\r\n\r\n        break;\r\n      }\r\n      case WS_DISCONNECT:\r\n        if (!isNil(stomp)) {\r\n          stomp.disconnect();\r\n        }\r\n        break;\r\n      case STOMP_CONNECT_ROOM:\r\n        break;\r\n      case STOMP_DISCONNECT_ROOM:\r\n        stomp.unsubscribe(`${PRIVATE_MESSAGE}/${action.object.roomId}`);\r\n        break;\r\n      case SEND_MESSAGE: {\r\n        const message = {\r\n          msgId: action.object.msgId,\r\n          content: action.object.content,\r\n          roomId: action.object.roomId,\r\n          senderId: action.object.senderId,\r\n        };\r\n\r\n        stomp.send(`/chat/room/${message.roomId}`, {}, JSON.stringify(message));\r\n        break;\r\n      }\r\n      default:\r\n    }\r\n    return next(action);\r\n  };\r\n};\r\n\r\nexport default websocketMiddleware;\r\n","import { KeyboardEvent } from 'react';\n\nconst useEnterKey = (enterFunction: (e?: any) => void) => (e: KeyboardEvent) => {\n  if (e.key === 'Enter') {\n    enterFunction();\n  }\n};\n\nexport default useEnterKey;\n","import { SearchOutlined } from '@ant-design/icons';\r\nimport React, { FormEvent, KeyboardEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from 'src/middlewares/message-socket.middleware';\r\nimport useEnterKey from 'src/utils/useKeyEnter';\r\n\r\nfunction Sender(props: { roomId: string; senderId: string }) {\r\n  const { senderId, roomId } = props;\r\n  const [text, setText] = useState('');\r\n  const dispatch = useDispatch();\r\n  const send = () => {\r\n    if (text !== '') {\r\n      dispatch(sendMessage(roomId, text, senderId));\r\n      setText('');\r\n    }\r\n  };\r\n  const enterKey = useEnterKey(send);\r\n\r\n  return (\r\n    <div className=\"flex-row sender-box flex-align-center padding-m\">\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        className=\"flex-1\"\r\n        onInput={(e: FormEvent<HTMLInputElement>) => setText(e.currentTarget.value)}\r\n        onKeyUp={(e: KeyboardEvent<HTMLInputElement>) => enterKey(e)}\r\n      />\r\n      <SearchOutlined className=\"icon-m padding-m\" onClick={() => send()} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sender;\r\n","import Message from 'src/models/message';\r\nimport UserInfo from 'src/models/user-info';\r\n\r\nclass Room {\r\n  id!: string;\r\n\r\n  name!: string;\r\n\r\n  participants: UserInfo[] = [];\r\n\r\n  messages: Message[] = [];\r\n\r\n  constructor(id?: string, name?: string, participants: UserInfo[] = [], messages: Message[] = []) {\r\n    this.id = id ?? '';\r\n    this.name = name ?? '';\r\n    this.participants = participants;\r\n    this.messages = messages;\r\n  }\r\n}\r\n\r\nexport default Room;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DetailHeader from 'src/components/detail-header';\r\nimport Conversation from 'src/containers/message/conversation';\r\nimport Sender from 'src/containers/message/sender';\r\nimport { connectStomp, disconnectStomp } from 'src/middlewares/message-socket.middleware';\r\nimport Room from 'src/models/room';\r\nimport ReduxStorage from 'src/models/storage';\r\n\r\nfunction ConversationRoom(props: { roomId: string; onBackClick: (id: string) => void }) {\r\n  const roomInfo: Room = useSelector(\r\n    (state: ReduxStorage) => state.rooms.find((room) => room.id === props.roomId) ?? new Room(),\r\n  );\r\n  const myUserInfo = useSelector((state: ReduxStorage) => state.userInfo);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(connectStomp(props.roomId));\r\n\r\n    return function cleanup() {\r\n      dispatch(disconnectStomp(props.roomId));\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"full-layout flex-col\">\r\n      <DetailHeader onBackClick={() => props.onBackClick('')} title={roomInfo!.name} />\r\n      <Conversation roomId={roomInfo.id ?? ''} />\r\n      <Sender roomId={roomInfo?.id ?? ''} senderId={myUserInfo.id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConversationRoom;\r\n","import ReduxAction from 'src/models/action';\nimport Message from 'src/models/message';\nimport Room from 'src/models/room';\nimport UserInfo from 'src/models/user-info';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const CREATE_CHAT_ROOM = 'CREATE_CHAT_ROOM';\nexport const GET_CHAT_ROOMS = 'GET_CHAT_ROOMS';\nexport const ADD_ROOM_USER = 'ADD_ROOM_USER';\nexport const SET_ROOM_MESSAGE = 'SET_ROOM_MESSAGE';\nexport const RECEIVE_MESSAGE = 'RECEIVE_MESSAGE';\n\nconst initState: Room = {\n  id: '',\n  name: '',\n  participants: [],\n  messages: [],\n};\n\nexport function createChatRoom(roomName: string) {\n  return {\n    type: CREATE_CHAT_ROOM,\n    payload: [{ id: uuidv4(), roomName }],\n  };\n}\n\nexport function getChatRooms(rooms: Room[]) {\n  return {\n    type: GET_CHAT_ROOMS,\n    payload: rooms,\n  };\n}\n\nexport function setRoomConversation(room = initState, messages: Message[]): ReduxAction<Room> {\n  const newMessages: Message[] = [...room.messages, ...messages];\n  const newRoom = { ...room, ...{ messages: newMessages } };\n\n  return {\n    type: SET_ROOM_MESSAGE,\n    payload: [],\n    object: newRoom,\n  };\n}\n\nexport function addParticipant(room: Room, userInfo: UserInfo[]): ReduxAction<Room> {\n  const newParticipants: UserInfo[] = room.participants.concat(userInfo);\n  const newRoom = { ...room, ...{ participants: newParticipants } };\n\n  return {\n    type: ADD_ROOM_USER,\n    payload: [],\n    object: newRoom,\n  };\n}\n\nconst roomReducer = (state: Room[] = [], action: ReduxAction<Room>): Room[] => {\n  switch (action.type) {\n    case CREATE_CHAT_ROOM:\n      return [...state, ...action.payload];\n    case GET_CHAT_ROOMS:\n      return action.payload;\n    case ADD_ROOM_USER:\n    case SET_ROOM_MESSAGE: {\n      const rooms = state.map((room) => (room.id === action?.object?.id ? action.object : room));\n      return rooms;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default roomReducer;\n","import React, { FormEvent, useState } from 'react';\nimport { CheckCircleFilled, CloseCircleFilled, RobotFilled, PlusCircleFilled } from '@ant-design/icons';\nimport { useDispatch } from 'react-redux';\nimport { createChatRoom } from 'src/reducers/room.reducer';\n\nconst CreateNewUserButton = () => {\n  const [isCreateUser, setIsCreateUser] = useState(false);\n  const [roomName, setRoomName] = useState('');\n  const dispatch = useDispatch();\n  const onClose = () => {\n    setIsCreateUser(false);\n    setRoomName('');\n  };\n  const onCreateRoom = () => {\n    dispatch(createChatRoom(roomName));\n    onClose();\n  };\n\n  return isCreateUser ? (\n    <div className=\"flex-row flex-align-center shadow-card\">\n      <RobotFilled className=\"icon-l R-margin-m padding-m\" />\n      <input\n        className=\"input-box input-f\"\n        value={roomName}\n        onInput={(e: FormEvent<HTMLInputElement>) => setRoomName(e.currentTarget.value)}\n      />\n      <CheckCircleFilled className=\"primary icon-m L-margin-m\" onClick={() => onCreateRoom()} />\n      <CloseCircleFilled className=\"primary icon-m L-margin-m\" onClick={() => setIsCreateUser(false)} />\n    </div>\n  ) : (\n    <button\n      type=\"button\"\n      className=\"flex-row full-width flex-align-center shadow-card\"\n      onClick={() => setIsCreateUser(true)}\n    >\n      <PlusCircleFilled className=\"primary icon-l padding-m\" />\n      <span>Create New Chatroom</span>\n    </button>\n  );\n};\n\nexport default CreateNewUserButton;\n","import { CommentOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport Room from 'src/models/room';\r\n\r\nconst ChatRoom = (props: { room: Room }) => {\r\n  const { room } = props;\r\n  return (\r\n    <div className=\"flex-row flex-align-center shadow-card\">\r\n      <CommentOutlined className=\"padding-m icon-l\" />\r\n      <div>{room.name}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ApiPath from 'src/constants/api.enum';\r\nimport CreateNewUserButton from 'src/containers/message/create-user-button';\r\nimport ChatRoom from 'src/containers/message/room';\r\nimport ResponseContent from 'src/models/response-content';\r\nimport Room from 'src/models/room';\r\nimport ReduxStorage from 'src/models/storage';\r\nimport { addParticipant, getChatRooms } from 'src/reducers/room.reducer';\r\n\r\nfunction ChatRoomList(props: { onClick: (id: string) => void }) {\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    axios.get<ResponseContent<Room[]>>('/api/rooms').then((response) => {\r\n      dispatch(getChatRooms(response.data.data));\r\n      setRooms(response.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const user = useSelector((state: ReduxStorage) => state.userInfo);\r\n\r\n  const onClickRoom = (room: Room) => {\r\n    axios.patch<ResponseContent<Room>>(`${ApiPath.Room}/${room.id}`, user).then((response) => {\r\n      dispatch(addParticipant(room, response.data.data.participants));\r\n      props.onClick(room.id);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      {rooms.map((room) => (\r\n        <div\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          key={room.id}\r\n          className=\"B-margin-m\"\r\n          onClick={() => onClickRoom(room)}\r\n          onKeyDown={() => {}}\r\n        >\r\n          <ChatRoom room={room} />\r\n        </div>\r\n      ))}\r\n      <CreateNewUserButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport ConversationRoom from 'src/containers/message/conversation-room';\r\nimport ChatRoomList from 'src/containers/message/room-list';\r\nimport { wsConnect, wsDisconnect } from 'src/middlewares/message-socket.middleware';\r\nimport { Drawer } from 'antd';\r\n\r\nfunction Message(props: { userId: string }) {\r\n  const { userId } = props;\r\n  const [roomId, setRoomId] = useState('');\r\n\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(wsConnect(userId));\r\n    }\r\n\r\n    return () => {\r\n      dispatch(wsDisconnect());\r\n    };\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" aria-label=\"mute\" className=\"icon-messenger icon-m\" onClick={() => setVisible(true)} />\r\n      <div className=\"flex-row\">\r\n        <Drawer\r\n          width=\"400px\"\r\n          placement=\"right\"\r\n          visible={visible}\r\n          onClose={() => setVisible(false)}\r\n          closable={false}\r\n          maskStyle={{ backgroundColor: 'transparent' }}\r\n          destroyOnClose\r\n        >\r\n          <div className=\"message-content\">\r\n            {roomId === '' ? (\r\n              <ChatRoomList onClick={(id: string) => setRoomId(id)} />\r\n            ) : (\r\n              <ConversationRoom roomId={roomId} onBackClick={() => setRoomId('')} />\r\n            )}\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Calendar from 'src/containers/calendar/calendar-board';\nimport Message from 'src/containers/message/message';\nimport ReduxStorage from 'src/models/storage';\nimport styled from 'styled-components';\n\nconst HeaderButtonGroup = styled.div`\n  * + * {\n    margin-left: var(--margin-m);\n  }\n`;\n\nfunction GlobalHeader(props: { title: string }) {\n  const myUserInfo = useSelector((state: ReduxStorage) => state.userInfo);\n  const { title } = props;\n\n  return (\n    <>\n      <header className=\"global-header\">\n        <div>---</div>\n        <span className=\"global-header-title\">{title}</span>\n        <HeaderButtonGroup className=\"flex-row flex-align-center\">\n          <Calendar />\n          <Message userId={myUserInfo.id} />\n        </HeaderButtonGroup>\n      </header>\n    </>\n  );\n}\n\nexport default GlobalHeader;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst InfiniteContainer = styled.div`\n  position: relative;\n`;\n\nconst Sensor = styled.span`\n  position: absolute;\n  width: 100%;\n  height: 1px;\n  visibility: hidden;\n`;\n\nexport default function InfiniteScroll<T>(\n  WrappedComponent: React.ComponentType<T>,\n  callback: (isIntersecting: boolean) => void,\n) {\n  return class extends React.PureComponent<T, { isLoadCompleted: boolean; isFetchingData: boolean }> {\n    constructor(props: T) {\n      super(props);\n\n      this.state = {\n        isLoadCompleted: false,\n        isFetchingData: false,\n      };\n    }\n\n    componentDidMount() {\n      const sensor = document.querySelector('#sensor');\n      if (sensor) {\n        new IntersectionObserver(\n          ([entry]) => {\n            const { isLoadCompleted, isFetchingData } = this.state;\n            callback(entry.isIntersecting && !isLoadCompleted && !isFetchingData);\n          },\n          { root: null, rootMargin: '0px', threshold: 0.5 },\n        ).observe(sensor);\n      }\n    }\n\n    render() {\n      return (\n        <InfiniteContainer>\n          <WrappedComponent\n            isLoadCompleted={(isLoadCompleted: boolean) => this.setState({ isLoadCompleted })}\n            isFetchingData={(isFetchingData: boolean) => this.setState({ isFetchingData })}\n            {...this.props}\n          />\n          <Sensor id=\"sensor\" />\n        </InfiniteContainer>\n      );\n    }\n  };\n}\n","import ReduxAction from 'src/models/action';\nimport GithubRepo from 'src/models/github-repo';\n\nconst initState: GithubRepo[] = [];\n\nexport const FETCH_LIST = 'FETCH_LIST';\nexport const SEARCH_NEW_GIT_REPO = 'SEARCH_NEW_GIT_REPO';\n\nexport function fetchGetList(list: GithubRepo[]): ReduxAction<GithubRepo> {\n  return {\n    type: FETCH_LIST,\n    payload: list,\n  };\n}\nexport function searchNewRepo(key: string): ReduxAction<GithubRepo, string> {\n  return {\n    type: SEARCH_NEW_GIT_REPO,\n    payload: [],\n    object: key,\n  };\n}\n\nconst githubRepoReducer = (state = initState, action: ReduxAction<GithubRepo, string>): GithubRepo[] => {\n  switch (action.type) {\n    case FETCH_LIST:\n      return [...state, ...action.payload];\n    case SEARCH_NEW_GIT_REPO:\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default githubRepoReducer;\n","import React, { useEffect } from 'react';\n// import axios from 'axios';\n// import GithubRepo from 'src/models/github-repo';\nimport styled from 'styled-components';\nimport { getDateDiff } from 'src/utils/date.util';\nimport InfiniteScrollProps from 'src/models/infinite-scroll';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReduxStorage from 'src/models/storage';\nimport { fetchGetList } from 'src/reducers/github-repo.reducer';\nimport { StarFilled } from '@ant-design/icons';\nimport { GIT_ACCESS_TOKEN } from 'src/constants/constants';\nimport axios from 'axios';\nimport GithubRepo from 'src/models/github-repo';\n\nconst Repo = styled.li`\n  margin: var(--margin-s);\n  padding: var(--margin-m);\n`;\n\nconst RepoStar = styled.div`\n  align-items: center;\n  width: 50px;\n  margin: auto 0 auto auto;\n`;\n\nconst RepoUpdateTime = styled.div`\n  margin: auto 0 auto auto;\n`;\n\nexport default function GithubRepoList(props: InfiniteScrollProps<{ searchName: string; page: number }>) {\n  const { propsData, isLoadCompleted, isFetchingData } = props;\n  const { searchName, page } = propsData;\n  const dispatch = useDispatch();\n  const repos = useSelector((store: ReduxStorage) => store.githubRepos);\n\n  const getGitRepo = () => {\n    isFetchingData && isFetchingData(true);\n\n    if (!searchName) {\n      return;\n    }\n\n    axios\n      .get<{ items: GithubRepo[] }>(`https://api.github.com/search/repositories`, {\n        params: { page, per_page: 10, q: searchName },\n        headers: {\n          Authorization: `token ${GIT_ACCESS_TOKEN}`,\n        },\n      })\n      .then((response) => {\n        if (response.status !== 204) {\n          return;\n        }\n\n        if (isLoadCompleted && !response.data.items.length) {\n          isLoadCompleted(true);\n          return;\n        }\n\n        dispatch(fetchGetList(response.data.items));\n        isFetchingData && isFetchingData(false);\n      });\n  };\n\n  const getStartCount = (starCount: number) => (starCount / 1000 > 1 ? `${(starCount / 1000).toFixed(1)}k` : starCount);\n\n  useEffect(() => {\n    getGitRepo();\n  }, [searchName, page]);\n\n  const goToGithub = (url: string) => window.open(url);\n\n  const getRepoLanguage = (language: string) => (language ? `${language}．` : '');\n\n  return (\n    <>\n      <ul className=\"reset-ul full-layout\">\n        {repos.length ? (\n          repos?.map((repo) => (\n            <Repo className=\"shadow-card\" key={repo.id} onClick={() => goToGithub(repo.html_url)}>\n              <div className=\"flex-row\">\n                <span className=\"title-3\">{repo.full_name}</span>\n                <RepoStar className=\"flex-row\">\n                  <StarFilled />\n                  <span className=\"L-margin-s\">{getStartCount(repo.stargazers_count)}</span>\n                </RepoStar>\n              </div>\n              <small className=\"small-text\">{repo.description}</small>\n              <div className=\"flex-row title-5\">\n                {getRepoLanguage(repo.language)}\n                {repo?.license?.name}\n                <RepoUpdateTime>{getDateDiff(repo.updated_at)}</RepoUpdateTime>\n              </div>\n            </Repo>\n          ))\n        ) : (\n          <div className=\"flex-row flex-center full-layout\">No Result</div>\n        )}\n      </ul>\n    </>\n  );\n}\n","import React, { useState, KeyboardEvent } from 'react';\nimport InfiniteScroll from 'src/hoc/infinite-scroll';\nimport GithubRepoList from 'src/containers/github-repo/github-repo-list';\nimport InfiniteScrollProps from 'src/models/infinite-scroll';\nimport { useDispatch } from 'react-redux';\nimport { searchNewRepo } from 'src/reducers/github-repo.reducer';\nimport useEnterKey from 'src/utils/useKeyEnter';\n\nexport default function GithubRepos() {\n  const [page, setPage] = useState<number>(1);\n  const [searchName, setSearchName] = useState('');\n  const dispatch = useDispatch();\n\n  const updateThePage = (isLoaded: boolean) => isLoaded && setPage((prePage) => prePage + 1);\n\n  const RepoList = InfiniteScroll<InfiniteScrollProps<{ searchName: string; page: number }>>(\n    GithubRepoList,\n    updateThePage,\n  );\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        defaultValue={searchName}\n        onKeyUp={(e: KeyboardEvent<HTMLInputElement>) =>\n          useEnterKey(() => {\n            const text = e.currentTarget.value;\n            if (text) {\n              setSearchName(e.currentTarget.value);\n              dispatch(searchNewRepo(e.currentTarget.value));\n            }\n          })(e)\n        }\n      />\n      <RepoList propsData={{ searchName, page }} />\n    </>\n  );\n}\n","import React from 'react';\nimport GlobalHeader from 'src/components/global-header';\nimport GithubRepos from 'src/containers/github-repo/github-repos';\n\nfunction Showroom() {\n  return (\n    <>\n      <GlobalHeader title=\"Show Room\" />\n      <main className=\"full-layout flex-col \">\n        <GithubRepos />\n      </main>\n    </>\n  );\n}\n\nexport default Showroom;\n","// import Login from 'Containers/login/login';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Login from 'src/containers/login/login';\r\nimport Showroom from 'src/containers/showroom/showroom';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/show-room\">\r\n          <Showroom />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\nimport ReduxStorage from 'src/models/storage';\nimport conversationReducer from 'src/reducers/conversation.reducer';\nimport githubRepoReducer from 'src/reducers/github-repo.reducer';\nimport loginReducer from 'src/reducers/login.reducer';\nimport roomReducer from 'src/reducers/room.reducer';\n\nconst storage = combineReducers<ReduxStorage>({\n  userInfo: loginReducer,\n  rooms: roomReducer,\n  conversation: conversationReducer,\n  githubRepos: githubRepoReducer,\n});\n\nexport default storage;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'src/App';\nimport websocketMiddleware from 'src/middlewares/message-socket.middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport storage from './reducers';\n\nconst store = createStore(storage, composeWithDevTools(applyMiddleware(ReduxThunk, websocketMiddleware)));\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}